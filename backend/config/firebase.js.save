import admin from 'firebase-admin';
import { getAuth } from 'firebase/auth';
import { initializeApp } from 'firebase/app';
import { getDatabase } from 'firebase/database';

// Firebase Admin SDK (for server-side)
let firebaseApp = null;
let realtimeDb = null;

export const initializeFirebase = async () => {
  try {
    if (firebaseApp) {
      return firebaseApp;
    }

    const serviceAccount = {
      projectId: process.env.FIREBASE_PROJECT_ID,
      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
    };

    firebaseApp = admin.initializeApp({
      credential: admin.credential.cert(serviceAccount),
      databaseURL: process.env.FIREBASE_DATABASE_URL,
    });

    realtimeDb = admin.database();
    return firebaseApp;
  } catch (error) {
    console.error('Firebase Admin initialization error:', error);
    throw error;
  }
};

// Firebase Client SDK (for client-side operations)
const firebaseConfig = {
  apiKey: process.env.FIREBASE_API_KEY,
  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
  databaseURL: process.env.FIREBASE_DATABASE_URL,
  projectId: process.env.FIREBASE_PROJECT_ID,
  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.FIREBASE_APP_ID,
  measurementId: process.env.FIREBASE_MEASUREMENT_ID
};

// Initialize Firebase Client
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const database = getDatabase(app);

export { auth, database, realtimeDb, getRealtimeDatabase };

// Helper function to get the realtime database
export function getRealtimeDatabase() {
  if (!realtimeDb) {
    throw new Error('Firebase not initialized. Call initializeFirebase() first.');
  }
  return realtimeDb;
}
